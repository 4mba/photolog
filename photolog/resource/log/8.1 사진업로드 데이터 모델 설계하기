8.1 사진업로드 데이터 모델 설계하기
8.2 포토로그 사진 업로드 화면 만들기
8.3 사진 업로드 화면 개발
8.4 플라스크를 이용한 사진 업로드 기능개발

/sns/twitter/callback/<photolog_id>


twitter.update_status_with_media(status=photo_comment,
                                         media=photo)

get_authorized_tokens(oauth_verifier)


#@PydevCodeAnalysisIgnore# 

get_photo_info(photolog_id)


'/sns/twitter/send/<photolog_id>'

'/sns/twitter/oauth/<photolog_id>'

'/sns/twitter/callback/<photolog_id>'


{% from "_formhelpers.html" import render_field %}



sudo apt-get install python-imaging



So what does that secure_filename() function actually do? Now the problem is that there is that principle called “never trust user input”. This is also true for the filename of an uploaded file. All submitted form data can be forged, and filenames can be dangerous. For the moment just remember: always use that function to secure a filename before storing it directly on the filesystem.

그래서 무엇입니까 secure_filename ()는 실제로대로 작동? 이제 문제는 "사용자 입력을 신뢰하지 않는다"라고하는 원칙이 있다는 것입니다. 이것은 또한 업로드 된 파일의 이름 마찬가지입니다. 모든 제출 양식 데이터를 위조 할 수 있으며, 파일 이름은 위험 할 수 있습니다. 순간 만 기억 : 항상 파일 시스템에 직접 저장하기 전에 파일 이름을 확보하기 위해이 함수를 사용합니다.


werkzeug.secure_filename ()


그래서 무엇입니까 secure_filename ()는 실제로대로 작동? 이제 문제는 "사용자 입력을 신뢰하지 않는다"라고하는 원칙이 있다는 것입니다. 이것은 또한 업로드 된 파일의 이름 마찬가지입니다. 모든 제출 양식 데이터를 위조 할 수 있으며, 파일 이름은 위험 할 수 있습니다. 순간 만 기억 : 항상 파일 시스템에 직접 저장하기 전에 파일 이름을 확보하기 위해이 함수를 사용합니다.

전문가를위한 정보
그래서 당신은 무엇에 관심이 secure_filename () 당신이 그것을 사용하지 않는 경우 함수가 무엇을 문제가 있습니까? 그래서 그냥 상상 누군가가 다음과 같은 정보 보낼 것입니다 이름 하여 응용 프로그램을 (를)

파일 이름  =  ".. /.. /.. /.. / 홈 / 사용자 이름 / .bashrc"
의 수 가정 ...은 / 올바른지 그리고 당신은이 작업을 결합 할 UPLOAD_FOLDER 사용자가 서버의 파일 시스템 그 또는 그녀가 수정할 수없는에서 파일을 수정할 수있는 능력을 가지고 있습니다. 이 응용 프로그램이 어떻게 생겼는지에 대한 몇 가지 지식을 필요로하지만, 날 믿어 않고, 해커 환자 :)입니다


filename = "../../../../home/username/.bashrc"

이제 그 기능이 어떻게 작동하는지 살펴 보자 :

>>> secure_filename ( '.. /.. /.. /.. / 홈 / 사용자 이름 / .bashrc' ) 
'home_username_.bashrc'
이제 마지막으로 한 가지가 누락됩니다 : 업로드 된 파일의 서빙. 플라스크 0.5로서 우리는 우리를 위해이 작업을 수행하는 함수를 사용할 수 있습니다 :

'home_username_.bashrc'


liks_bf91410e-430e-4059-89da-3b7c676c800f.JPG
thumb_liks_bf91410e-430e-4059-89da-3b7c676c800f.JPG

uuid.uuid4()) 

O_CREAT



장고(Django)는 웹 2.0 애플리케이션을 빠르고 쉽게 개발할 수 있는 파이썬용 웹 프레임워크다. Ajax나 소셜 기능 등 최신 웹 애플리케이션이라면 갖추어야 할 기능들을 간단한 코드만으로 작성할 수 있고, 데이터베이스 연동이나 사용자 관리도 매우 쉽게 구현할 수 있는 것이 특징이다. 이 책은 딜리셔스 (delicious) 같은 웹 2.0 북마크 애플리케이션을 처음부터 만들어 보면서 장고의 기능들을 설명하고 있다. 또한 특별히 한국어판에서는 장고용 웹호스팅 업체에 목말라 있는 한국 독자들을 위하여, 장고로 개발한 애플리케이션을 구글앱엔진(Google App Engine)용으로 수정하는 과정을 수록하였다.

장고의 URL, 뷰, 모델, 템플릿 등을 설명하면서 사용자 페이지를 만들어 보고, 보안에 민감한 데이터를 보호하는 방법, 이 밖에도 유용할만한 장고의 기능들을 소개하고 있다.


http://sudharsh.wordpress.com/2009/05/11/why-python/


<html>
    <head>
        <title> <?=$title?> </title>
    </head>
    <body>
        <h1>Hello! World</h1>
        <?=mysql_query("SELECT name....")?>
    </body>
</html>


from flask import Flask
app = Flask(__name__)

@app.route("/")
def hello():
return "Hello World!"

if __name__ == "__main__":
    app.run()




        {% if pagination %}
            <div class="row-fluid" align="center">
                <div class="span12">
                <p>
                    {% from "_pagehelpers.html" import render_pagination %}
                    {{ render_pagination(pagination) }}
                </p>
                </div>
            </div>
        {% else %}
        <!-- do nothing! -->
        {% endif %}



Pagination


'The End of Pagination(http://www.codinghorror.com/blog/2012/03/the-end-of-pagination.html)'


'When Infinite Scroll Doesn't Work' (http://www.usabilitypost.com/2013/01/07/when-infinite-scroll-doesnt-work/)


Archive Feed @usabilitypost
UsabilityPost


http://getbootstrap.com/components/#pagination

…

&laquo;


class flask.ext.sqlalchemy.Pagination

flask-sqlalchemy


class flask.ext.sqlalchemy.Pagination


2013-09-20 17:11:18,138 INFO sqlalchemy.engine.base.Engine (u'9', 1, 0)
2013-09-20 17:11:37,438 - ERROR - while checking session, error occurs : Twitter
 API returned a 403 (Forbidden), One or more of the uploaded media is too large
127.0.0.1 - - [20/Sep/2013 17:11:37] "GET /sns/twitter/send/9 HTTP/1.1" 500 -






8.1 화면 UI 만들기
8.2 다운로드와 썸네일 처리하기
8.3 화면에 보여줄 데이터 처리하기
8.4 페이징 기능 구현하기
8.5 검색기능 추가하기
8.6 지도에서 보여주기


Access:
Read only
Read and Write
Read, Write and Access direct messages

update_status_with_media


AS photos_geotag_lat, photos.geotag_lng AS photos_geotag_lng, photos.upload_date
 AS photos_upload_date, photos.taken_date AS photos_taken_date
FROM photos
WHERE photos.id = ?
 LIMIT ? OFFSET ?
2013-09-21 10:24:43,619 INFO sqlalchemy.engine.base.Engine (u'11', 1, 0)
127.0.0.1 - - [21/Sep/2013 10:24:55] "GET /sns/twitter/callback/11?oauth_token=a
odrKq4VsvgESTBOeb9f9hCOfoKmAo065P9BEzDRc&oauth_verifier=fQAAmbgtIDJ7pWgeGbAodqp5
St5AAjiuUx9WXYVZE HTTP/1.1" 302 -
2013-09-21 10:24:55,592 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2013-09-21 10:24:55,594 INFO sqlalchemy.engine.base.Engine SELECT count(*) AS co
unt_1
FROM (SELECT photos.id AS photos_id, photos.user_id AS photos_user_id, photos.ta
g AS photos_tag, photos.comment AS photos_comment, photos.filename_orig AS photo
s_filename_orig, photos.filename AS photos_filename, photos.filesize AS photos_f
ilesize, photos.geotag_lat AS photos_geotag_lat, photos.geotag_lng AS photos_geo


/sns/twitter/callback/11?oauth_token=aodrKq4VsvgESTBOeb9f9hCOfoKmAo065P9BEzDRc&oauth_verifier=fQAAmbgtIDJ7pWgeGbAodqp5St5AAjiuUx9WXYVZE


request.args['oauth_verifier']

final_step['oauth_token'], final_step['oauth_token_secret']
url_for('.show_all')



{% if session.__contains__('TWITTER_RESULT') %}

    var twit_result = '{{ session.pop('TWITTER_RESULT', None) }}';
        
    if (twit_result == 'ok') {
        bootbox.alert('트윗을 전송하였습니다.');          
    }
    else {
        bootbox.alert('트윗 전송에 실패하였습니다. ('+twit_result+')');         
    }
{% endif %}



9.1 트위터 어플리케이션 등록
9.2 Twython을 이용한 간단한 트위터 클라이언트 
9.3 트위터 연동 모듈 개발
9.4 트윗 보내기 결과 메시지 보여주기
9.5 트위터 연동 확인


redirect(url_for('.show_all'))

var twit_result = '{{ session.pop('TWITTER_RESULT', None) }}';

실제로, photolog_id에 해당하는 사진과 커멘트를 트위터로 전송하는 내부 함수






{
    "contributors": null,
    "coordinates": null,
    "created_at": "Sun Sep 22 09:46:28 +0000 2013",
    "entities": {
        "hashtags": [],
        "media": [
            {
                "display_url": "pic.twitter.com/u4xzWrqu5k",
                "expanded_url": "http://twitter.com/liks79/status/381716113643421696/photo/1",
                "id": 381716113429520384,
                "id_str": "381716113429520384",
                "indices": [
                    17,
                    39
                ],
                "media_url": "http://pbs.twimg.com/media/BUwgyGICYAA-ekM.jpg",
                "media_url_https": "https://pbs.twimg.com/media/BUwgyGICYAA-ekM.jpg",
                "sizes": {
                    "large": {
                        "h": 768,
                        "resize": "fit",
                        "w": 1024
                    },
                    "medium": {
                        "h": 450,
                        "resize": "fit",
                        "w": 600
                    },
                    "small": {
                        "h": 255,
                        "resize": "fit",
                        "w": 340
                    },
                    "thumb": {
                        "h": 150,
                        "resize": "crop",
                        "w": 150
                    }
                },
                "type": "photo",
                "url": "http://t.co/u4xzWedc5k"
            }
        ],
        "symbols": [],
        "urls": [],
        "user_mentions": []
    },
    "favorite_count": 0,
    "favorited": false,
    "geo": null,
    "id": 381716113643421696,
    "id_str": "381716113643421696",
    "in_reply_to_screen_name": null,
    "in_reply_to_status_id": null,
    "in_reply_to_status_id_str": null,
    "in_reply_to_user_id": null,
    "in_reply_to_user_id_str": null,
    "lang": "en",
    "place": null,
    "possibly_sensitive": false,
    "retweet_count": 0,
    "retweeted": false,
    "source": "<a href=\"http://www.xxx-yyy.net\" rel=\"nofollow\">photolog_dev</a>",
    "text": "twit with image! http://t.co/u4xzWrqu5k",
    "truncated": false,
    "user": {
        "contributors_enabled": false,
        "created_at": "Sun Jun 21 07:05:43 +0000 2009",
        "default_profile": false,
        "default_profile_image": false,
        "description": "",
        "entities": {
            "description": {
                "urls": []
            },
            "url": {
                "urls": [
                    {
                        "display_url": "xxx-yyy.net",
                        "expanded_url": "http://www.xxx-yyy.net",
                        "indices": [
                            0,
                            22
                        ],
                        "url": "http://t.co/W4KtaedcVz"
                    }
                ]
            }
        },
        "favourites_count": 1,
        "follow_request_sent": false,
        "followers_count": 41,
        "following": false,
        "friends_count": 49,
        "geo_enabled": true,
        "id": 49258051,
        "id_str": "49258051",
        "is_translator": false,
        "lang": "en",
        "listed_count": 1,
        "location": "Seoul, Korea",
        "name": "Jou Sung Shik",
        "notifications": false,
        "profile_background_color": "0099B9",
        "profile_background_image_url": "http://abs.twimg.com/images/themes/theme4/bg.gif",
        "profile_background_image_url_https": "https://abs.twimg.com/images/themes/theme4/bg.gif",
        "profile_background_tile": false,
        "profile_image_url": "http://a0.twimg.com/profile_images/2537891598/xd1wrp3jonfvt9zfq0bh_normal.jpeg",
        "profile_image_url_https": "https://si0.twimg.com/profile_images/2537891598/xd1wrp3jonfvt9zfq0bh_normal.jpeg",
        "profile_link_color": "0099B9",
        "profile_sidebar_border_color": "5ED4DC",
        "profile_sidebar_fill_color": "95E8EC",
        "profile_text_color": "3C3940",
        "profile_use_background_image": true,
        "protected": false,
        "screen_name": "hongkildong79",
        "statuses_count": 217,
        "time_zone": "Seoul",
        "url": "http://t.co/W4KtaedcVz",
        "utc_offset": 32400,
        "verified": false
    }
}

